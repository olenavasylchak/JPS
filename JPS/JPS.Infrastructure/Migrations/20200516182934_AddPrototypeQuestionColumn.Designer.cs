// <auto-generated />
using System;
using JPS.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JPS.Domain.Entities.Migrations
{
    [DbContext(typeof(JPSContext))]
    [Migration("20200516182934_AddPrototypeQuestionColumn")]
    partial class AddPrototypeQuestionColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JPS.Domain.Entities.Entities.AnswerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionId = 1,
                            UserId = "6b4b7339-1f6c-41bc-885f-3eee80d2f7c2"
                        },
                        new
                        {
                            Id = 2,
                            QuestionId = 2,
                            UserId = "6b4b7339-1f6c-41bc-885f-3eee80d2f7c2"
                        },
                        new
                        {
                            Id = 3,
                            QuestionId = 3,
                            UserId = "6b4b7339-1f6c-41bc-885f-3eee80d2f7c2"
                        },
                        new
                        {
                            Id = 4,
                            QuestionId = 4,
                            UserId = "6b4b7339-1f6c-41bc-885f-3eee80d2f7c2"
                        },
                        new
                        {
                            Id = 5,
                            QuestionId = 5,
                            UserId = "6b4b7339-1f6c-41bc-885f-3eee80d2f7c2"
                        },
                        new
                        {
                            Id = 6,
                            QuestionId = 6,
                            UserId = "6b4b7339-1f6c-41bc-885f-3eee80d2f7c2"
                        },
                        new
                        {
                            Id = 7,
                            QuestionId = 7,
                            UserId = "6b4b7339-1f6c-41bc-885f-3eee80d2f7c2"
                        },
                        new
                        {
                            Id = 8,
                            QuestionId = 8,
                            UserId = "6b4b7339-1f6c-41bc-885f-3eee80d2f7c2"
                        },
                        new
                        {
                            Id = 9,
                            QuestionId = 9,
                            UserId = "6b4b7339-1f6c-41bc-885f-3eee80d2f7c2"
                        },
                        new
                        {
                            Id = 10,
                            QuestionId = 10,
                            UserId = "6b4b7339-1f6c-41bc-885f-3eee80d2f7c2"
                        },
                        new
                        {
                            Id = 11,
                            QuestionId = 11,
                            UserId = "6b4b7339-1f6c-41bc-885f-3eee80d2f7c2"
                        },
                        new
                        {
                            Id = 12,
                            QuestionId = 1,
                            UserId = "39be8196-adbd-405e-a4ed-9025abdaaec7"
                        },
                        new
                        {
                            Id = 13,
                            QuestionId = 2,
                            UserId = "39be8196-adbd-405e-a4ed-9025abdaaec7"
                        },
                        new
                        {
                            Id = 14,
                            QuestionId = 3,
                            UserId = "39be8196-adbd-405e-a4ed-9025abdaaec7"
                        },
                        new
                        {
                            Id = 15,
                            QuestionId = 4,
                            UserId = "39be8196-adbd-405e-a4ed-9025abdaaec7"
                        },
                        new
                        {
                            Id = 16,
                            QuestionId = 5,
                            UserId = "39be8196-adbd-405e-a4ed-9025abdaaec7"
                        },
                        new
                        {
                            Id = 17,
                            QuestionId = 6,
                            UserId = "39be8196-adbd-405e-a4ed-9025abdaaec7"
                        },
                        new
                        {
                            Id = 18,
                            QuestionId = 7,
                            UserId = "39be8196-adbd-405e-a4ed-9025abdaaec7"
                        },
                        new
                        {
                            Id = 19,
                            QuestionId = 8,
                            UserId = "39be8196-adbd-405e-a4ed-9025abdaaec7"
                        },
                        new
                        {
                            Id = 20,
                            QuestionId = 9,
                            UserId = "39be8196-adbd-405e-a4ed-9025abdaaec7"
                        },
                        new
                        {
                            Id = 21,
                            QuestionId = 10,
                            UserId = "39be8196-adbd-405e-a4ed-9025abdaaec7"
                        },
                        new
                        {
                            Id = 22,
                            QuestionId = 11,
                            UserId = "39be8196-adbd-405e-a4ed-9025abdaaec7"
                        },
                        new
                        {
                            Id = 23,
                            QuestionId = 2,
                            UserId = "6b4b7339-1f6c-41bc-885f-3eee80d2f7c2"
                        },
                        new
                        {
                            Id = 24,
                            QuestionId = 9,
                            UserId = "39be8196-adbd-405e-a4ed-9025abdaaec7"
                        },
                        new
                        {
                            Id = 25,
                            QuestionId = 12,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 26,
                            QuestionId = 13,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 27,
                            QuestionId = 14,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 28,
                            QuestionId = 15,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 29,
                            QuestionId = 16,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 30,
                            QuestionId = 17,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 31,
                            QuestionId = 18,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 32,
                            QuestionId = 19,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 33,
                            QuestionId = 20,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 34,
                            QuestionId = 21,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 35,
                            QuestionId = 22,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 36,
                            QuestionId = 23,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 37,
                            QuestionId = 24,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 38,
                            QuestionId = 25,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 39,
                            QuestionId = 26,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 40,
                            QuestionId = 27,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 41,
                            QuestionId = 28,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 42,
                            QuestionId = 29,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 43,
                            QuestionId = 30,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 44,
                            QuestionId = 31,
                            UserId = "d895b083-82af-47d9-8ff7-abdc9bf862da"
                        },
                        new
                        {
                            Id = 45,
                            QuestionId = 12,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 46,
                            QuestionId = 13,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 47,
                            QuestionId = 14,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 48,
                            QuestionId = 15,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 49,
                            QuestionId = 16,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 50,
                            QuestionId = 17,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 51,
                            QuestionId = 18,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 52,
                            QuestionId = 19,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 53,
                            QuestionId = 20,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 54,
                            QuestionId = 21,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 55,
                            QuestionId = 22,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 56,
                            QuestionId = 23,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 57,
                            QuestionId = 24,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 58,
                            QuestionId = 25,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 59,
                            QuestionId = 26,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 60,
                            QuestionId = 27,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 61,
                            QuestionId = 28,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 62,
                            QuestionId = 29,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 63,
                            QuestionId = 30,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 64,
                            QuestionId = 31,
                            UserId = "438d3c8d-0a2e-4112-a9ea-96e3de436595"
                        },
                        new
                        {
                            Id = 65,
                            QuestionId = 12,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 66,
                            QuestionId = 13,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 67,
                            QuestionId = 14,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 68,
                            QuestionId = 15,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 69,
                            QuestionId = 16,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 70,
                            QuestionId = 17,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 71,
                            QuestionId = 18,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 72,
                            QuestionId = 19,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 73,
                            QuestionId = 20,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 74,
                            QuestionId = 21,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 75,
                            QuestionId = 22,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 76,
                            QuestionId = 23,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 77,
                            QuestionId = 24,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 78,
                            QuestionId = 25,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 79,
                            QuestionId = 26,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 80,
                            QuestionId = 27,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 81,
                            QuestionId = 28,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 82,
                            QuestionId = 29,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 83,
                            QuestionId = 30,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 84,
                            QuestionId = 31,
                            UserId = "1fea2f55-ea63-472d-a71c-74336c54273c"
                        },
                        new
                        {
                            Id = 85,
                            QuestionId = 12,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 86,
                            QuestionId = 13,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 87,
                            QuestionId = 14,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 88,
                            QuestionId = 15,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 89,
                            QuestionId = 16,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 90,
                            QuestionId = 17,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 91,
                            QuestionId = 18,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 92,
                            QuestionId = 19,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 93,
                            QuestionId = 20,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 94,
                            QuestionId = 21,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 95,
                            QuestionId = 22,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 96,
                            QuestionId = 23,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 97,
                            QuestionId = 24,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 98,
                            QuestionId = 25,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 99,
                            QuestionId = 26,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 100,
                            QuestionId = 27,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 101,
                            QuestionId = 28,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 102,
                            QuestionId = 29,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 103,
                            QuestionId = 30,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 104,
                            QuestionId = 31,
                            UserId = "a988b093-8ffe-4830-a011-3fd491e150ba"
                        },
                        new
                        {
                            Id = 105,
                            QuestionId = 12,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 106,
                            QuestionId = 13,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 107,
                            QuestionId = 14,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 108,
                            QuestionId = 15,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 109,
                            QuestionId = 16,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 110,
                            QuestionId = 17,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 111,
                            QuestionId = 18,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 112,
                            QuestionId = 19,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 113,
                            QuestionId = 20,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 114,
                            QuestionId = 21,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 115,
                            QuestionId = 22,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 116,
                            QuestionId = 23,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 117,
                            QuestionId = 24,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 118,
                            QuestionId = 25,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 119,
                            QuestionId = 26,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 120,
                            QuestionId = 27,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 121,
                            QuestionId = 28,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 122,
                            QuestionId = 29,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 123,
                            QuestionId = 30,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        },
                        new
                        {
                            Id = 124,
                            QuestionId = 31,
                            UserId = "cc115878-58c4-42b3-b384-e780d87bfb02"
                        });
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.CategoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Title = "JSPSurvey"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            ParentCategoryId = 1,
                            Title = "ESAT"
                        });
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.DateAnswerEntity", b =>
                {
                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("AnswerId");

                    b.ToTable("DateAnswers");

                    b.HasData(
                        new
                        {
                            AnswerId = 16,
                            Date = new DateTimeOffset(new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
                        },
                        new
                        {
                            AnswerId = 5,
                            Date = new DateTimeOffset(new DateTime(1995, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
                        },
                        new
                        {
                            AnswerId = 34,
                            Date = new DateTimeOffset(new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
                        },
                        new
                        {
                            AnswerId = 44,
                            Date = new DateTimeOffset(new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
                        },
                        new
                        {
                            AnswerId = 54,
                            Date = new DateTimeOffset(new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
                        },
                        new
                        {
                            AnswerId = 64,
                            Date = new DateTimeOffset(new DateTime(2020, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
                        },
                        new
                        {
                            AnswerId = 74,
                            Date = new DateTimeOffset(new DateTime(2020, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
                        },
                        new
                        {
                            AnswerId = 84,
                            Date = new DateTimeOffset(new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
                        },
                        new
                        {
                            AnswerId = 94,
                            Date = new DateTimeOffset(new DateTime(2020, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
                        },
                        new
                        {
                            AnswerId = 104,
                            Date = new DateTimeOffset(new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
                        },
                        new
                        {
                            AnswerId = 114,
                            Date = new DateTimeOffset(new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
                        },
                        new
                        {
                            AnswerId = 124,
                            Date = new DateTimeOffset(new DateTime(2020, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.FileAnswerEntity", b =>
                {
                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnswerId");

                    b.ToTable("FileAnswers");
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.OptionAnswerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<int?>("OptionRowId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("OptionId");

                    b.HasIndex("OptionRowId");

                    b.ToTable("OptionAnswers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnswerId = 1,
                            OptionId = 1
                        },
                        new
                        {
                            Id = 2,
                            AnswerId = 12,
                            OptionId = 1
                        },
                        new
                        {
                            Id = 3,
                            AnswerId = 2,
                            OptionId = 4
                        },
                        new
                        {
                            Id = 4,
                            AnswerId = 13,
                            OptionId = 4
                        },
                        new
                        {
                            Id = 5,
                            AnswerId = 23,
                            OptionId = 3
                        },
                        new
                        {
                            Id = 6,
                            AnswerId = 3,
                            OptionId = 5
                        },
                        new
                        {
                            Id = 7,
                            AnswerId = 14,
                            OptionId = 6
                        },
                        new
                        {
                            Id = 8,
                            AnswerId = 7,
                            OptionId = 8
                        },
                        new
                        {
                            Id = 9,
                            AnswerId = 18,
                            OptionId = 7
                        },
                        new
                        {
                            Id = 10,
                            AnswerId = 8,
                            OptionId = 9,
                            OptionRowId = 1
                        },
                        new
                        {
                            Id = 11,
                            AnswerId = 19,
                            OptionId = 10,
                            OptionRowId = 2
                        },
                        new
                        {
                            Id = 12,
                            AnswerId = 9,
                            OptionId = 12,
                            OptionRowId = 1
                        },
                        new
                        {
                            Id = 13,
                            AnswerId = 20,
                            OptionId = 11,
                            OptionRowId = 2
                        },
                        new
                        {
                            Id = 14,
                            AnswerId = 24,
                            OptionId = 12,
                            OptionRowId = 2
                        },
                        new
                        {
                            Id = 15,
                            AnswerId = 27,
                            OptionId = 13
                        },
                        new
                        {
                            Id = 16,
                            AnswerId = 37,
                            OptionId = 38
                        },
                        new
                        {
                            Id = 17,
                            AnswerId = 28,
                            OptionId = 19
                        },
                        new
                        {
                            Id = 18,
                            AnswerId = 38,
                            OptionId = 42
                        },
                        new
                        {
                            Id = 19,
                            AnswerId = 38,
                            OptionId = 43
                        },
                        new
                        {
                            Id = 20,
                            AnswerId = 29,
                            OptionId = 22
                        },
                        new
                        {
                            Id = 21,
                            AnswerId = 39,
                            OptionId = 46
                        },
                        new
                        {
                            Id = 22,
                            AnswerId = 31,
                            OptionId = 29
                        },
                        new
                        {
                            Id = 23,
                            AnswerId = 41,
                            OptionId = 54
                        },
                        new
                        {
                            Id = 24,
                            AnswerId = 32,
                            OptionId = 31,
                            OptionRowId = 7
                        },
                        new
                        {
                            Id = 25,
                            AnswerId = 32,
                            OptionId = 31,
                            OptionRowId = 8
                        },
                        new
                        {
                            Id = 26,
                            AnswerId = 32,
                            OptionId = 32,
                            OptionRowId = 9
                        },
                        new
                        {
                            Id = 27,
                            AnswerId = 42,
                            OptionId = 57,
                            OptionRowId = 13
                        },
                        new
                        {
                            Id = 28,
                            AnswerId = 42,
                            OptionId = 55,
                            OptionRowId = 14
                        },
                        new
                        {
                            Id = 29,
                            AnswerId = 42,
                            OptionId = 55,
                            OptionRowId = 14
                        },
                        new
                        {
                            Id = 30,
                            AnswerId = 33,
                            OptionId = 34,
                            OptionRowId = 10
                        },
                        new
                        {
                            Id = 31,
                            AnswerId = 33,
                            OptionId = 35,
                            OptionRowId = 11
                        },
                        new
                        {
                            Id = 32,
                            AnswerId = 33,
                            OptionId = 36,
                            OptionRowId = 12
                        },
                        new
                        {
                            Id = 33,
                            AnswerId = 43,
                            OptionId = 58,
                            OptionRowId = 16
                        },
                        new
                        {
                            Id = 34,
                            AnswerId = 43,
                            OptionId = 58,
                            OptionRowId = 17
                        },
                        new
                        {
                            Id = 35,
                            AnswerId = 43,
                            OptionId = 60,
                            OptionRowId = 18
                        },
                        new
                        {
                            Id = 36,
                            AnswerId = 47,
                            OptionId = 15
                        },
                        new
                        {
                            Id = 37,
                            AnswerId = 57,
                            OptionId = 39
                        },
                        new
                        {
                            Id = 38,
                            AnswerId = 48,
                            OptionId = 20
                        },
                        new
                        {
                            Id = 39,
                            AnswerId = 58,
                            OptionId = 43
                        },
                        new
                        {
                            Id = 40,
                            AnswerId = 48,
                            OptionId = 43
                        },
                        new
                        {
                            Id = 41,
                            AnswerId = 49,
                            OptionId = 24
                        },
                        new
                        {
                            Id = 42,
                            AnswerId = 59,
                            OptionId = 45
                        },
                        new
                        {
                            Id = 43,
                            AnswerId = 51,
                            OptionId = 29
                        },
                        new
                        {
                            Id = 44,
                            AnswerId = 61,
                            OptionId = 54
                        },
                        new
                        {
                            Id = 45,
                            AnswerId = 52,
                            OptionId = 32,
                            OptionRowId = 7
                        },
                        new
                        {
                            Id = 46,
                            AnswerId = 52,
                            OptionId = 33,
                            OptionRowId = 8
                        },
                        new
                        {
                            Id = 47,
                            AnswerId = 52,
                            OptionId = 32,
                            OptionRowId = 9
                        },
                        new
                        {
                            Id = 48,
                            AnswerId = 62,
                            OptionId = 57,
                            OptionRowId = 13
                        },
                        new
                        {
                            Id = 49,
                            AnswerId = 62,
                            OptionId = 56,
                            OptionRowId = 14
                        },
                        new
                        {
                            Id = 50,
                            AnswerId = 62,
                            OptionId = 56,
                            OptionRowId = 15
                        },
                        new
                        {
                            Id = 51,
                            AnswerId = 53,
                            OptionId = 35,
                            OptionRowId = 10
                        },
                        new
                        {
                            Id = 52,
                            AnswerId = 53,
                            OptionId = 35,
                            OptionRowId = 11
                        },
                        new
                        {
                            Id = 53,
                            AnswerId = 53,
                            OptionId = 34,
                            OptionRowId = 12
                        },
                        new
                        {
                            Id = 54,
                            AnswerId = 63,
                            OptionId = 59,
                            OptionRowId = 16
                        },
                        new
                        {
                            Id = 55,
                            AnswerId = 63,
                            OptionId = 59,
                            OptionRowId = 17
                        },
                        new
                        {
                            Id = 56,
                            AnswerId = 63,
                            OptionId = 60,
                            OptionRowId = 18
                        },
                        new
                        {
                            Id = 57,
                            AnswerId = 67,
                            OptionId = 17
                        },
                        new
                        {
                            Id = 58,
                            AnswerId = 77,
                            OptionId = 37
                        },
                        new
                        {
                            Id = 59,
                            AnswerId = 68,
                            OptionId = 19
                        },
                        new
                        {
                            Id = 60,
                            AnswerId = 78,
                            OptionId = 44
                        },
                        new
                        {
                            Id = 61,
                            AnswerId = 68,
                            OptionId = 43
                        },
                        new
                        {
                            Id = 62,
                            AnswerId = 69,
                            OptionId = 22
                        },
                        new
                        {
                            Id = 63,
                            AnswerId = 79,
                            OptionId = 45
                        },
                        new
                        {
                            Id = 64,
                            AnswerId = 71,
                            OptionId = 30
                        },
                        new
                        {
                            Id = 65,
                            AnswerId = 81,
                            OptionId = 52
                        },
                        new
                        {
                            Id = 66,
                            AnswerId = 72,
                            OptionId = 32,
                            OptionRowId = 7
                        },
                        new
                        {
                            Id = 67,
                            AnswerId = 72,
                            OptionId = 31,
                            OptionRowId = 8
                        },
                        new
                        {
                            Id = 68,
                            AnswerId = 72,
                            OptionId = 31,
                            OptionRowId = 9
                        },
                        new
                        {
                            Id = 69,
                            AnswerId = 82,
                            OptionId = 56,
                            OptionRowId = 13
                        },
                        new
                        {
                            Id = 70,
                            AnswerId = 82,
                            OptionId = 55,
                            OptionRowId = 14
                        },
                        new
                        {
                            Id = 71,
                            AnswerId = 82,
                            OptionId = 55,
                            OptionRowId = 15
                        },
                        new
                        {
                            Id = 72,
                            AnswerId = 73,
                            OptionId = 35,
                            OptionRowId = 10
                        },
                        new
                        {
                            Id = 73,
                            AnswerId = 73,
                            OptionId = 35,
                            OptionRowId = 11
                        },
                        new
                        {
                            Id = 74,
                            AnswerId = 73,
                            OptionId = 34,
                            OptionRowId = 12
                        },
                        new
                        {
                            Id = 75,
                            AnswerId = 83,
                            OptionId = 59,
                            OptionRowId = 16
                        },
                        new
                        {
                            Id = 76,
                            AnswerId = 83,
                            OptionId = 59,
                            OptionRowId = 17
                        },
                        new
                        {
                            Id = 77,
                            AnswerId = 83,
                            OptionId = 60,
                            OptionRowId = 18
                        },
                        new
                        {
                            Id = 78,
                            AnswerId = 87,
                            OptionId = 17
                        },
                        new
                        {
                            Id = 79,
                            AnswerId = 97,
                            OptionId = 37
                        },
                        new
                        {
                            Id = 80,
                            AnswerId = 88,
                            OptionId = 19
                        },
                        new
                        {
                            Id = 81,
                            AnswerId = 98,
                            OptionId = 44
                        },
                        new
                        {
                            Id = 82,
                            AnswerId = 88,
                            OptionId = 43
                        },
                        new
                        {
                            Id = 83,
                            AnswerId = 89,
                            OptionId = 22
                        },
                        new
                        {
                            Id = 84,
                            AnswerId = 99,
                            OptionId = 45
                        },
                        new
                        {
                            Id = 85,
                            AnswerId = 91,
                            OptionId = 30
                        },
                        new
                        {
                            Id = 86,
                            AnswerId = 101,
                            OptionId = 52
                        },
                        new
                        {
                            Id = 87,
                            AnswerId = 92,
                            OptionId = 32,
                            OptionRowId = 7
                        },
                        new
                        {
                            Id = 88,
                            AnswerId = 92,
                            OptionId = 31,
                            OptionRowId = 8
                        },
                        new
                        {
                            Id = 89,
                            AnswerId = 92,
                            OptionId = 31,
                            OptionRowId = 9
                        },
                        new
                        {
                            Id = 90,
                            AnswerId = 102,
                            OptionId = 56,
                            OptionRowId = 13
                        },
                        new
                        {
                            Id = 91,
                            AnswerId = 102,
                            OptionId = 55,
                            OptionRowId = 14
                        },
                        new
                        {
                            Id = 92,
                            AnswerId = 102,
                            OptionId = 55,
                            OptionRowId = 15
                        },
                        new
                        {
                            Id = 93,
                            AnswerId = 93,
                            OptionId = 35,
                            OptionRowId = 10
                        },
                        new
                        {
                            Id = 94,
                            AnswerId = 93,
                            OptionId = 35,
                            OptionRowId = 11
                        },
                        new
                        {
                            Id = 95,
                            AnswerId = 93,
                            OptionId = 34,
                            OptionRowId = 12
                        },
                        new
                        {
                            Id = 96,
                            AnswerId = 103,
                            OptionId = 59,
                            OptionRowId = 16
                        },
                        new
                        {
                            Id = 97,
                            AnswerId = 103,
                            OptionId = 59,
                            OptionRowId = 17
                        },
                        new
                        {
                            Id = 98,
                            AnswerId = 103,
                            OptionId = 60,
                            OptionRowId = 18
                        },
                        new
                        {
                            Id = 99,
                            AnswerId = 107,
                            OptionId = 13
                        },
                        new
                        {
                            Id = 100,
                            AnswerId = 117,
                            OptionId = 38
                        },
                        new
                        {
                            Id = 101,
                            AnswerId = 108,
                            OptionId = 19
                        },
                        new
                        {
                            Id = 102,
                            AnswerId = 118,
                            OptionId = 42
                        },
                        new
                        {
                            Id = 103,
                            AnswerId = 118,
                            OptionId = 43
                        },
                        new
                        {
                            Id = 104,
                            AnswerId = 109,
                            OptionId = 22
                        },
                        new
                        {
                            Id = 105,
                            AnswerId = 119,
                            OptionId = 46
                        },
                        new
                        {
                            Id = 106,
                            AnswerId = 111,
                            OptionId = 29
                        },
                        new
                        {
                            Id = 107,
                            AnswerId = 121,
                            OptionId = 54
                        },
                        new
                        {
                            Id = 108,
                            AnswerId = 112,
                            OptionId = 31,
                            OptionRowId = 7
                        },
                        new
                        {
                            Id = 109,
                            AnswerId = 112,
                            OptionId = 31,
                            OptionRowId = 8
                        },
                        new
                        {
                            Id = 110,
                            AnswerId = 112,
                            OptionId = 32,
                            OptionRowId = 9
                        },
                        new
                        {
                            Id = 111,
                            AnswerId = 122,
                            OptionId = 57,
                            OptionRowId = 13
                        },
                        new
                        {
                            Id = 112,
                            AnswerId = 122,
                            OptionId = 55,
                            OptionRowId = 14
                        },
                        new
                        {
                            Id = 113,
                            AnswerId = 122,
                            OptionId = 55,
                            OptionRowId = 14
                        },
                        new
                        {
                            Id = 114,
                            AnswerId = 113,
                            OptionId = 34,
                            OptionRowId = 10
                        },
                        new
                        {
                            Id = 115,
                            AnswerId = 113,
                            OptionId = 35,
                            OptionRowId = 11
                        },
                        new
                        {
                            Id = 116,
                            AnswerId = 113,
                            OptionId = 36,
                            OptionRowId = 12
                        },
                        new
                        {
                            Id = 117,
                            AnswerId = 123,
                            OptionId = 58,
                            OptionRowId = 16
                        },
                        new
                        {
                            Id = 118,
                            AnswerId = 123,
                            OptionId = 58,
                            OptionRowId = 17
                        },
                        new
                        {
                            Id = 119,
                            AnswerId = 123,
                            OptionId = 60,
                            OptionRowId = 18
                        });
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.OptionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Options");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Order = 1,
                            QuestionId = 1,
                            Text = "option 1"
                        },
                        new
                        {
                            Id = 2,
                            Order = 2,
                            QuestionId = 1,
                            Text = "option 2"
                        },
                        new
                        {
                            Id = 3,
                            Order = 2,
                            QuestionId = 2,
                            Text = "option 1"
                        },
                        new
                        {
                            Id = 4,
                            Order = 1,
                            QuestionId = 2,
                            Text = "option 2"
                        },
                        new
                        {
                            Id = 5,
                            Order = 1,
                            QuestionId = 3,
                            Text = "option 1"
                        },
                        new
                        {
                            Id = 6,
                            Order = 2,
                            QuestionId = 3,
                            Text = "option 2"
                        },
                        new
                        {
                            Id = 7,
                            Order = 1,
                            QuestionId = 7,
                            Text = "option 1",
                            Value = 1m
                        },
                        new
                        {
                            Id = 8,
                            Order = 2,
                            QuestionId = 7,
                            Text = "option 2",
                            Value = 2m
                        },
                        new
                        {
                            Id = 9,
                            Order = 2,
                            QuestionId = 8,
                            Text = "option 1"
                        },
                        new
                        {
                            Id = 10,
                            Order = 1,
                            QuestionId = 8,
                            Text = "option 2"
                        },
                        new
                        {
                            Id = 11,
                            Order = 1,
                            QuestionId = 9,
                            Text = "option 1"
                        },
                        new
                        {
                            Id = 12,
                            Order = 2,
                            QuestionId = 9,
                            Text = "option 2"
                        },
                        new
                        {
                            Id = 13,
                            Order = 1,
                            QuestionId = 14,
                            Text = "Згоден"
                        },
                        new
                        {
                            Id = 14,
                            Order = 2,
                            QuestionId = 14,
                            Text = "В прицнипі згоден"
                        },
                        new
                        {
                            Id = 15,
                            Order = 3,
                            QuestionId = 14,
                            Text = "Важко сказати, не можу визначитись"
                        },
                        new
                        {
                            Id = 16,
                            Order = 4,
                            QuestionId = 14,
                            Text = "Не зовсім згоден"
                        },
                        new
                        {
                            Id = 17,
                            Order = 5,
                            QuestionId = 14,
                            Text = "Не згоден"
                        },
                        new
                        {
                            Id = 18,
                            Order = 1,
                            QuestionId = 15,
                            Text = "Чистота"
                        },
                        new
                        {
                            Id = 19,
                            Order = 2,
                            QuestionId = 15,
                            Text = "Менеджмент"
                        },
                        new
                        {
                            Id = 20,
                            Order = 3,
                            QuestionId = 15,
                            Text = "Матеріальна компенсація"
                        },
                        new
                        {
                            Id = 21,
                            Order = 1,
                            QuestionId = 16,
                            Text = "Згоден"
                        },
                        new
                        {
                            Id = 22,
                            Order = 2,
                            QuestionId = 16,
                            Text = "В прицнипі згоден"
                        },
                        new
                        {
                            Id = 23,
                            Order = 3,
                            QuestionId = 16,
                            Text = "Важко сказати, не можу визначитись"
                        },
                        new
                        {
                            Id = 24,
                            Order = 4,
                            QuestionId = 16,
                            Text = "Не зовсім згоден"
                        },
                        new
                        {
                            Id = 25,
                            Order = 5,
                            QuestionId = 16,
                            Text = "Не згоден"
                        },
                        new
                        {
                            Id = 26,
                            Order = 1,
                            QuestionId = 18,
                            Value = 1m
                        },
                        new
                        {
                            Id = 27,
                            Order = 2,
                            QuestionId = 18,
                            Value = 2m
                        },
                        new
                        {
                            Id = 28,
                            Order = 3,
                            QuestionId = 18,
                            Value = 3m
                        },
                        new
                        {
                            Id = 29,
                            Order = 4,
                            QuestionId = 18,
                            Value = 4m
                        },
                        new
                        {
                            Id = 30,
                            Order = 5,
                            QuestionId = 18,
                            Value = 5m
                        },
                        new
                        {
                            Id = 31,
                            Order = 1,
                            QuestionId = 19,
                            Text = "Добре"
                        },
                        new
                        {
                            Id = 32,
                            Order = 2,
                            QuestionId = 19,
                            Text = "Нормально"
                        },
                        new
                        {
                            Id = 33,
                            Order = 3,
                            QuestionId = 19,
                            Text = "Погано"
                        },
                        new
                        {
                            Id = 34,
                            Order = 1,
                            QuestionId = 20,
                            Text = "Умови"
                        },
                        new
                        {
                            Id = 35,
                            Order = 2,
                            QuestionId = 20,
                            Text = "Зарплата"
                        },
                        new
                        {
                            Id = 36,
                            Order = 3,
                            QuestionId = 20,
                            Text = "Менеджмент"
                        },
                        new
                        {
                            Id = 37,
                            Order = 1,
                            QuestionId = 24,
                            Text = "Згоден"
                        },
                        new
                        {
                            Id = 38,
                            Order = 2,
                            QuestionId = 24,
                            Text = "В прицнипі згоден"
                        },
                        new
                        {
                            Id = 39,
                            Order = 3,
                            QuestionId = 24,
                            Text = "Важко сказати, не можу визначитись"
                        },
                        new
                        {
                            Id = 40,
                            Order = 4,
                            QuestionId = 24,
                            Text = "Не зовсім згоден"
                        },
                        new
                        {
                            Id = 41,
                            Order = 5,
                            QuestionId = 24,
                            Text = "Не згоден"
                        },
                        new
                        {
                            Id = 42,
                            Order = 1,
                            QuestionId = 25,
                            Text = "Мотивації"
                        },
                        new
                        {
                            Id = 43,
                            Order = 2,
                            QuestionId = 25,
                            Text = "Свободи дій"
                        },
                        new
                        {
                            Id = 44,
                            Order = 3,
                            QuestionId = 25,
                            Text = "Чвсу"
                        },
                        new
                        {
                            Id = 45,
                            Order = 1,
                            QuestionId = 26,
                            Text = "Згоден"
                        },
                        new
                        {
                            Id = 46,
                            Order = 2,
                            QuestionId = 26,
                            Text = "В прицнипі згоден"
                        },
                        new
                        {
                            Id = 47,
                            Order = 3,
                            QuestionId = 26,
                            Text = "Важко сказати, не можу визначитись"
                        },
                        new
                        {
                            Id = 48,
                            Order = 4,
                            QuestionId = 26,
                            Text = "Не зовсім згоден"
                        },
                        new
                        {
                            Id = 49,
                            Order = 5,
                            QuestionId = 26,
                            Text = "Не згоден"
                        },
                        new
                        {
                            Id = 50,
                            Order = 1,
                            QuestionId = 28,
                            Value = 1m
                        },
                        new
                        {
                            Id = 51,
                            Order = 2,
                            QuestionId = 28,
                            Value = 2m
                        },
                        new
                        {
                            Id = 52,
                            Order = 3,
                            QuestionId = 28,
                            Value = 3m
                        },
                        new
                        {
                            Id = 53,
                            Order = 4,
                            QuestionId = 28,
                            Value = 4m
                        },
                        new
                        {
                            Id = 54,
                            Order = 5,
                            QuestionId = 28,
                            Value = 5m
                        },
                        new
                        {
                            Id = 55,
                            Order = 1,
                            QuestionId = 29,
                            Text = "Добре"
                        },
                        new
                        {
                            Id = 56,
                            Order = 2,
                            QuestionId = 29,
                            Text = "Нормально"
                        },
                        new
                        {
                            Id = 57,
                            Order = 3,
                            QuestionId = 29,
                            Text = "Погано"
                        },
                        new
                        {
                            Id = 58,
                            Order = 1,
                            QuestionId = 30,
                            Text = "Умови"
                        },
                        new
                        {
                            Id = 59,
                            Order = 2,
                            QuestionId = 30,
                            Text = "Зарплата"
                        },
                        new
                        {
                            Id = 60,
                            Order = 3,
                            QuestionId = 30,
                            Text = "Менеджмент"
                        });
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.OptionRowEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("OptionRows");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Order = 1,
                            QuestionId = 8,
                            Text = "optionRow 1"
                        },
                        new
                        {
                            Id = 2,
                            Order = 2,
                            QuestionId = 8,
                            Text = "optionRow 2"
                        },
                        new
                        {
                            Id = 3,
                            Order = 3,
                            QuestionId = 8,
                            Text = "optionRow 3"
                        },
                        new
                        {
                            Id = 4,
                            Order = 1,
                            QuestionId = 9,
                            Text = "optionRow 1"
                        },
                        new
                        {
                            Id = 5,
                            Order = 2,
                            QuestionId = 9,
                            Text = "optionRow 2"
                        },
                        new
                        {
                            Id = 6,
                            Order = 3,
                            QuestionId = 9,
                            Text = "optionRow 3"
                        },
                        new
                        {
                            Id = 7,
                            Order = 1,
                            QuestionId = 19,
                            Text = "Температура"
                        },
                        new
                        {
                            Id = 8,
                            Order = 2,
                            QuestionId = 19,
                            Text = "Вентиляція"
                        },
                        new
                        {
                            Id = 9,
                            Order = 3,
                            QuestionId = 19,
                            Text = "Освітлення"
                        },
                        new
                        {
                            Id = 10,
                            Order = 1,
                            QuestionId = 20,
                            Text = "Задоволений"
                        },
                        new
                        {
                            Id = 11,
                            Order = 2,
                            QuestionId = 20,
                            Text = "Важко сказати"
                        },
                        new
                        {
                            Id = 12,
                            Order = 3,
                            QuestionId = 20,
                            Text = "Не задоволений"
                        },
                        new
                        {
                            Id = 13,
                            Order = 1,
                            QuestionId = 29,
                            Text = "Атмосфера"
                        },
                        new
                        {
                            Id = 14,
                            Order = 2,
                            QuestionId = 29,
                            Text = "Взаємодопомого"
                        },
                        new
                        {
                            Id = 15,
                            Order = 3,
                            QuestionId = 29,
                            Text = "Дружність"
                        },
                        new
                        {
                            Id = 16,
                            Order = 1,
                            QuestionId = 30,
                            Text = "Задоволений"
                        },
                        new
                        {
                            Id = 17,
                            Order = 2,
                            QuestionId = 30,
                            Text = "Важко сказати"
                        },
                        new
                        {
                            Id = 18,
                            Order = 3,
                            QuestionId = 30,
                            Text = "Не задоволений"
                        });
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.ParagraphAnswerEntity", b =>
                {
                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnswerId");

                    b.ToTable("ParagraphAnswers");

                    b.HasData(
                        new
                        {
                            AnswerId = 10,
                            Text = "Paragraph answer here"
                        },
                        new
                        {
                            AnswerId = 21,
                            Text = "Paragraph answer here"
                        },
                        new
                        {
                            AnswerId = 26,
                            Text = "Гарантія стабільності"
                        },
                        new
                        {
                            AnswerId = 36,
                            Text = "Мої друзі"
                        },
                        new
                        {
                            AnswerId = 46,
                            Text = "Опора в житті."
                        },
                        new
                        {
                            AnswerId = 56,
                            Text = "колектив, який завжди готовий допомогти."
                        },
                        new
                        {
                            AnswerId = 66,
                            Text = "Стимул розвиватися."
                        },
                        new
                        {
                            AnswerId = 76,
                            Text = "друга сім'я."
                        },
                        new
                        {
                            AnswerId = 86,
                            Text = "Пасхалка, єбать."
                        },
                        new
                        {
                            AnswerId = 96,
                            Text = "Число сорок два(осмислена відповідь)."
                        },
                        new
                        {
                            AnswerId = 106,
                            Text = "Прогрес."
                        },
                        new
                        {
                            AnswerId = 116,
                            Text = "це мої колєги."
                        });
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.PollEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndPollJobId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("FinishesAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("InProgressPollJobId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("bit");

                    b.Property<string>("StartPollJobId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("StartsAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Polls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "It`s an ESAT 2019 poll.",
                            FinishesAt = new DateTimeOffset(new DateTime(2019, 10, 20, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsAnonymous = false,
                            StartsAt = new DateTimeOffset(new DateTime(2019, 10, 10, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            Title = "ESAT 2019"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "It`s an ESAT 2020 poll.",
                            FinishesAt = new DateTimeOffset(new DateTime(2019, 6, 1, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsAnonymous = false,
                            StartsAt = new DateTimeOffset(new DateTime(2020, 5, 1, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            Title = "ESAT 2020"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "It`s an anonymous poll.",
                            FinishesAt = new DateTimeOffset(new DateTime(2019, 4, 20, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsAnonymous = true,
                            StartsAt = new DateTimeOffset(new DateTime(2020, 4, 10, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            Title = "Anonymous"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Метою даного опитування є потреба розуміти рівень задоволеності кожного працівника роботою в нашій Компанії.",
                            FinishesAt = new DateTimeOffset(new DateTime(2020, 7, 20, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            IsAnonymous = false,
                            StartsAt = new DateTimeOffset(new DateTime(2020, 5, 6, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 3, 0, 0, 0)),
                            Title = "ESAT 2020v2"
                        });
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.QuestionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanHaveOtherOption")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("PrototypeQuestionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionSectionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PrototypeQuestionId");

                    b.HasIndex("QuestionSectionId");

                    b.HasIndex("QuestionTypeId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 1,
                            QuestionSectionId = 3,
                            QuestionTypeId = 3,
                            Text = "How are you?"
                        },
                        new
                        {
                            Id = 2,
                            CanHaveOtherOption = false,
                            IsRequired = false,
                            Order = 2,
                            QuestionSectionId = 3,
                            QuestionTypeId = 4,
                            Text = "Why are you crying?"
                        },
                        new
                        {
                            Id = 3,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 3,
                            QuestionSectionId = 3,
                            QuestionTypeId = 5,
                            Text = "Choose your sex?"
                        },
                        new
                        {
                            Id = 4,
                            CanHaveOtherOption = false,
                            IsRequired = false,
                            Order = 4,
                            QuestionSectionId = 3,
                            QuestionTypeId = 6,
                            Text = "Download your selfie"
                        },
                        new
                        {
                            Id = 5,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 5,
                            QuestionSectionId = 3,
                            QuestionTypeId = 10,
                            Text = "When were you born?"
                        },
                        new
                        {
                            Id = 6,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 2,
                            QuestionSectionId = 4,
                            QuestionTypeId = 1,
                            Text = "Short feedback about company"
                        },
                        new
                        {
                            Id = 7,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 1,
                            QuestionSectionId = 4,
                            QuestionTypeId = 7,
                            Text = "Are you satisfied with the service in our company?"
                        },
                        new
                        {
                            Id = 8,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 3,
                            QuestionSectionId = 4,
                            QuestionTypeId = 8,
                            Text = "Rate our work"
                        },
                        new
                        {
                            Id = 9,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 4,
                            QuestionSectionId = 4,
                            QuestionTypeId = 9,
                            Text = "What did you respect in"
                        },
                        new
                        {
                            Id = 10,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 1,
                            QuestionSectionId = 5,
                            QuestionTypeId = 2,
                            Text = "What are you think about your team?"
                        },
                        new
                        {
                            Id = 11,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 2,
                            QuestionSectionId = 5,
                            QuestionTypeId = 11,
                            Text = "When would you like to come to work?"
                        },
                        new
                        {
                            Id = 12,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 1,
                            QuestionSectionId = 6,
                            QuestionTypeId = 1,
                            Text = "Що слід покращити в Компанії?"
                        },
                        new
                        {
                            Id = 13,
                            CanHaveOtherOption = false,
                            IsRequired = false,
                            Order = 2,
                            QuestionSectionId = 6,
                            QuestionTypeId = 2,
                            Text = "Моя компанія для мене - це..."
                        },
                        new
                        {
                            Id = 14,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 3,
                            QuestionSectionId = 6,
                            QuestionTypeId = 3,
                            Text = "Компанія надає мені можливості до професійного розвитку."
                        },
                        new
                        {
                            Id = 15,
                            CanHaveOtherOption = true,
                            IsRequired = false,
                            Order = 4,
                            QuestionSectionId = 6,
                            QuestionTypeId = 4,
                            Text = "Виберіть пункти, які б ви покращили у нашій Компанії."
                        },
                        new
                        {
                            Id = 16,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 5,
                            QuestionSectionId = 6,
                            QuestionTypeId = 5,
                            Text = "Компанія створює умови для кар'єрного зростання."
                        },
                        new
                        {
                            Id = 17,
                            CanHaveOtherOption = false,
                            IsRequired = false,
                            Order = 6,
                            QuestionSectionId = 6,
                            QuestionTypeId = 11,
                            Text = "О котрій годині Вам зручно починати працювати?"
                        },
                        new
                        {
                            Id = 18,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 7,
                            QuestionSectionId = 6,
                            QuestionTypeId = 7,
                            Text = "Мені подобається офіс компанії."
                        },
                        new
                        {
                            Id = 19,
                            CanHaveOtherOption = false,
                            IsRequired = false,
                            Order = 8,
                            QuestionSectionId = 6,
                            QuestionTypeId = 8,
                            Text = "Оцініть офісне приміщення."
                        },
                        new
                        {
                            Id = 20,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 9,
                            QuestionSectionId = 6,
                            QuestionTypeId = 9,
                            Text = "Зробіть свою оцінку."
                        },
                        new
                        {
                            Id = 21,
                            CanHaveOtherOption = false,
                            IsRequired = false,
                            Order = 10,
                            QuestionSectionId = 6,
                            QuestionTypeId = 10,
                            Text = "Коли б Ви хотіли провести літній корпоратив?"
                        },
                        new
                        {
                            Id = 22,
                            CanHaveOtherOption = false,
                            IsRequired = false,
                            Order = 1,
                            QuestionSectionId = 7,
                            QuestionTypeId = 1,
                            Text = "Що слід змінити у Вашій команді?"
                        },
                        new
                        {
                            Id = 23,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 2,
                            QuestionSectionId = 7,
                            QuestionTypeId = 2,
                            Text = "Моя команда для мене - це...    "
                        },
                        new
                        {
                            Id = 24,
                            CanHaveOtherOption = true,
                            IsRequired = false,
                            Order = 3,
                            QuestionSectionId = 7,
                            QuestionTypeId = 3,
                            Text = "Робота в моїй команді добре координується РМ-ом:"
                        },
                        new
                        {
                            Id = 25,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 4,
                            QuestionSectionId = 7,
                            QuestionTypeId = 4,
                            Text = "Чого Вам не вистачає?"
                        },
                        new
                        {
                            Id = 26,
                            CanHaveOtherOption = false,
                            IsRequired = false,
                            Order = 5,
                            QuestionSectionId = 7,
                            QuestionTypeId = 5,
                            Text = "Мій менеджер заохочує співпрацю в команді."
                        },
                        new
                        {
                            Id = 27,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 6,
                            QuestionSectionId = 7,
                            QuestionTypeId = 11,
                            Text = "О котрій годині у Вашої команди Daily call?"
                        },
                        new
                        {
                            Id = 28,
                            CanHaveOtherOption = false,
                            IsRequired = false,
                            Order = 7,
                            QuestionSectionId = 7,
                            QuestionTypeId = 7,
                            Text = "Атмосфера у команді."
                        },
                        new
                        {
                            Id = 29,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 8,
                            QuestionSectionId = 7,
                            QuestionTypeId = 8,
                            Text = "Оцініть Вашу команду."
                        },
                        new
                        {
                            Id = 30,
                            CanHaveOtherOption = false,
                            IsRequired = false,
                            Order = 9,
                            QuestionSectionId = 7,
                            QuestionTypeId = 9,
                            Text = "Заповніть таблицю стосовно Ваших поглядів на команду."
                        },
                        new
                        {
                            Id = 31,
                            CanHaveOtherOption = false,
                            IsRequired = true,
                            Order = 10,
                            QuestionSectionId = 7,
                            QuestionTypeId = 10,
                            Text = "Оберіть дату для тусовки Вашої команди."
                        });
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.QuestionSectionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("PollId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("PollId");

                    b.ToTable("QuestionSections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Here will be questions about you.",
                            Order = 1,
                            PollId = 1,
                            Title = "About you"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Here will be questions about you.",
                            Order = 1,
                            PollId = 3,
                            Title = "About you"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Here will be questions about you.",
                            Order = 1,
                            PollId = 2,
                            Title = "About you"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Here will be questions about company.",
                            Order = 2,
                            PollId = 2,
                            Title = "About company"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Here will be questions about team.",
                            Order = 3,
                            PollId = 2,
                            Title = "About team"
                        },
                        new
                        {
                            Id = 6,
                            Description = "У цій секції будуть міститись питання про компанію.",
                            Order = 1,
                            PollId = 4,
                            Title = "Компанія"
                        },
                        new
                        {
                            Id = 7,
                            Description = "У цій секції будуть міститись питання про Вашу команду.",
                            Order = 2,
                            PollId = 4,
                            Title = "Команда"
                        });
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.QuestionTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("QuestionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Text"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Paragraph"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Multiple choice"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Checkboxes"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Dropdown"
                        },
                        new
                        {
                            Id = 6,
                            Title = "File upload"
                        },
                        new
                        {
                            Id = 7,
                            Title = "Linear scale"
                        },
                        new
                        {
                            Id = 8,
                            Title = "Multiple choice grid"
                        },
                        new
                        {
                            Id = 9,
                            Title = "Checkbox grid"
                        },
                        new
                        {
                            Id = 10,
                            Title = "Date"
                        },
                        new
                        {
                            Id = 11,
                            Title = "Time"
                        });
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.TextAnswerEntity", b =>
                {
                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("AnswerId");

                    b.ToTable("TextAnswers");

                    b.HasData(
                        new
                        {
                            AnswerId = 6,
                            Text = "Something"
                        },
                        new
                        {
                            AnswerId = 17,
                            Text = "Something 2"
                        },
                        new
                        {
                            AnswerId = 25,
                            Text = "Я б хотів збільшити температуру в офісі."
                        },
                        new
                        {
                            AnswerId = 35,
                            Text = "Мене все влаштовує."
                        },
                        new
                        {
                            AnswerId = 45,
                            Text = "Я б хотів збільшити вологість в офісі."
                        },
                        new
                        {
                            AnswerId = 55,
                            Text = "Важко сказати."
                        },
                        new
                        {
                            AnswerId = 65,
                            Text = "У мене немає побажань."
                        },
                        new
                        {
                            AnswerId = 85,
                            Text = "Все чудово."
                        },
                        new
                        {
                            AnswerId = 95,
                            Text = "Мене все влаштовує."
                        },
                        new
                        {
                            AnswerId = 105,
                            Text = "Зремонтуйте стілець."
                        },
                        new
                        {
                            AnswerId = 115,
                            Text = "Все збс."
                        });
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.TimeAnswerEntity", b =>
                {
                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("AnswerId");

                    b.ToTable("TimeAnswers");

                    b.HasData(
                        new
                        {
                            AnswerId = 11,
                            Time = new TimeSpan(0, 9, 0, 0, 0)
                        },
                        new
                        {
                            AnswerId = 22,
                            Time = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            AnswerId = 30,
                            Time = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            AnswerId = 40,
                            Time = new TimeSpan(0, 16, 0, 0, 0)
                        },
                        new
                        {
                            AnswerId = 50,
                            Time = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            AnswerId = 60,
                            Time = new TimeSpan(0, 16, 0, 0, 0)
                        },
                        new
                        {
                            AnswerId = 70,
                            Time = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            AnswerId = 80,
                            Time = new TimeSpan(0, 15, 0, 0, 0)
                        },
                        new
                        {
                            AnswerId = 90,
                            Time = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            AnswerId = 100,
                            Time = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            AnswerId = 110,
                            Time = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            AnswerId = 120,
                            Time = new TimeSpan(0, 16, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.AnswerEntity", b =>
                {
                    b.HasOne("JPS.Domain.Entities.Entities.QuestionEntity", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.CategoryEntity", b =>
                {
                    b.HasOne("JPS.Domain.Entities.Entities.CategoryEntity", "Category")
                        .WithMany("Categories")
                        .HasForeignKey("ParentCategoryId");
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.DateAnswerEntity", b =>
                {
                    b.HasOne("JPS.Domain.Entities.Entities.AnswerEntity", "Answer")
                        .WithOne("DateAnswer")
                        .HasForeignKey("JPS.Domain.Entities.Entities.DateAnswerEntity", "AnswerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.FileAnswerEntity", b =>
                {
                    b.HasOne("JPS.Domain.Entities.Entities.AnswerEntity", "Answer")
                        .WithOne("FileAnswer")
                        .HasForeignKey("JPS.Domain.Entities.Entities.FileAnswerEntity", "AnswerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.OptionAnswerEntity", b =>
                {
                    b.HasOne("JPS.Domain.Entities.Entities.AnswerEntity", "Answer")
                        .WithMany("OptionAnswers")
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("JPS.Domain.Entities.Entities.OptionEntity", "Option")
                        .WithMany("OptionAnswers")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("JPS.Domain.Entities.Entities.OptionRowEntity", "OptionRow")
                        .WithMany("OptionAnswers")
                        .HasForeignKey("OptionRowId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.OptionEntity", b =>
                {
                    b.HasOne("JPS.Domain.Entities.Entities.QuestionEntity", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.OptionRowEntity", b =>
                {
                    b.HasOne("JPS.Domain.Entities.Entities.QuestionEntity", "Question")
                        .WithMany("OptionRows")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.ParagraphAnswerEntity", b =>
                {
                    b.HasOne("JPS.Domain.Entities.Entities.AnswerEntity", "Answer")
                        .WithOne("ParagraphAnswer")
                        .HasForeignKey("JPS.Domain.Entities.Entities.ParagraphAnswerEntity", "AnswerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.PollEntity", b =>
                {
                    b.HasOne("JPS.Domain.Entities.Entities.CategoryEntity", "Category")
                        .WithMany("Polls")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.QuestionEntity", b =>
                {
                    b.HasOne("JPS.Domain.Entities.Entities.QuestionEntity", "PrototypeQuestion")
                        .WithMany("QuestionClones")
                        .HasForeignKey("PrototypeQuestionId");

                    b.HasOne("JPS.Domain.Entities.Entities.QuestionSectionEntity", "QuestionSection")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JPS.Domain.Entities.Entities.QuestionTypeEntity", "QuestionType")
                        .WithMany("Questions")
                        .HasForeignKey("QuestionTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.QuestionSectionEntity", b =>
                {
                    b.HasOne("JPS.Domain.Entities.Entities.PollEntity", "Poll")
                        .WithMany("QuestionSections")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.TextAnswerEntity", b =>
                {
                    b.HasOne("JPS.Domain.Entities.Entities.AnswerEntity", "Answer")
                        .WithOne("TextAnswer")
                        .HasForeignKey("JPS.Domain.Entities.Entities.TextAnswerEntity", "AnswerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("JPS.Domain.Entities.Entities.TimeAnswerEntity", b =>
                {
                    b.HasOne("JPS.Domain.Entities.Entities.AnswerEntity", "Answer")
                        .WithOne("TimeAnswer")
                        .HasForeignKey("JPS.Domain.Entities.Entities.TimeAnswerEntity", "AnswerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
